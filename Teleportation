startFile
chatBoxside = ""
modemside   = ""
commandBlockSide=""
main = "tp @p "

chatBox = perapheral.wrap()
if not chatBox then
print("Chat Box not install correctly!")
end
modem = perapheral.wrap(modem)
cmd   = peripheral.wrap(commandBlockSide)
if not modem or not cmd then
print("modem not on the right side")

symbol={"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J"}

HomeSymbol = 

--math.random(lower, upper)
--



List = {
        [Address]="",
    [Destination]="",
    
        [Address]="",
    [Destination]="",
    
       [Address]="",
    [Destination]="",
    
        [Address]="",
    [Destination]=""
}

for Addr,Dest in pairs(List) do
print(Addr.." : "..Dest)
end

-- math.mod(number, 2) == 0 for checking if even

MonitorTele = function()

monitor.clear()
event,side,X,Y = os.pullEvent()
while true do
mainAddress = ""
for i=1, #ButtonName do
monitor.setCursorPos(ButtonX[i],ButtonY[i])
monitor.setBackgroundColor(colors.red)
monitor.write(string.rep(" ",string.len(ButtonName[i])+2))
monitor.setCursorPos(ButtonX[i],ButtonY[i]+1)
monitor.write(" "..ButtonName[i].." ")
monitor.setCursorPos(ButtonX[i],ButtonY[i]+2)
monitor.write(string.rep(" ",string.len(ButtonName[i])+2))
monitor.setBackgroundColor(colors.black)

end

event,side,X,Y = os.pullEvent("monitor_touch")

for i=1, #ButtonX do
if API.isOn(X,Y,ButtonX[i],ButtonY[i],ButtonX[i]+string.len(ButtonName[i])+2,ButtonY[i]+3) then
mainAddress = main..Address[i]
print(ButtonName[i])
print(mainAddress)
if not redstone.getInput("right") then
cmd.setCommand(mainAddress)
cmd.runCommand()

end end end end end

endFile
