startFile
disk = 4
monitor = 3
commandBlock = "top"
chatBoxside = "right"


local CommandBlock = peripheral.wrap(commandBlock)
chatBox = peripheral.wrap(chatBoxside)
local DHD = peripheral.wrap("monitor_"..monitor)

if not chatBox then
print("Chat Box not install correctly!")
end
if not CommandBlock or not DHD then
error("Install is wrong! Check Command Block and Monitor") end

x,y = DHD.getSize()
DHD.setBackgroundColor(colors.black)
DHD.clear()
ActiveButtons={}
InputAddress = ""
Symbols = {
"!","@","#","$","+",
"%","^","&","*","(",
")","-","H","_","~",
">","<","?","/","]",
"[","|",",","'","{"
}--25 symbols
HomeSymbol = 25


--example address "/8/12/7/17/18/19/14/9" it will then be paired with its Destination and used
Address     ={"/1/2/3/4/5/6/7/25",""}
Destinations={"~0 ~0 ~0",""}

setSymbols = function()
DHD.setBackgroundColor(colors.black)
DHD.clear()
R=1
N=0
overClocked = redstone.getInput("front")
for i=1, #Symbols do
if not overClocked then color = colors.orange
if N == 8 and R==3 then color = colors.red end
else color = colors.red 
if N == 8 and R==3 then color = colors.orange end end--end color check

for j=1, #ActiveButtons do
if ActiveButtons[j]==i then color=colors.green end end


setButton(-3+R*6,2+N,Symbols[i],color)
R=R+1
if R == 6 then
R = 1 
N = N+4 end
end--setSymbols
end--function


CheckSum = function(X,Y)
Z = X - Y
if Z < 0 then return false else return true end
end


insertTable = function(i,x)
doneV = false
for K=1,#ActiveButtons do
if ActiveButtons[K] == i then doneV = true end
end

checkNil = function(input,output)
if input == nil then
return output
else
return input
end
end

if #ActiveButtons==8 and overClocked and not doneV then
table.insert(x,0,i)
doneV = true
end

if #ActiveButtons<8 and not done then
table.insert(x,0,i) else
print("input Overburdened")
end
end--function

setButton = function(X,Y,filler,color)
DHD.setBackgroundColor(color)
DHD.setCursorPos(X-1,Y+1)
DHD.write("   ")
DHD.setCursorPos(X-1,Y)
DHD.write(" "..filler.." ")
end

while true do
if term.isColor() and x>28 then
CommandBlock.setCommand("")
InputAddress = ""
setSymbols()
type,monNumb,monX,monY,var5 = os.pullEventRaw()

if monNumb == "monitor_"..monitor then
print(monX)
print(monY)
R=1
N=0
for J=1, #Symbols do
if monX == 14 and monY==10 or monX == 15 and monY==10 or monX == 16 and monY==10 or
   monX == 14 and monY==11 or monX == 15 and monY==11 or monX == 16 and monY==11 then

if #ActiveButtons > 7 then
for i=1, #ActiveButtons do 
InputAddress = InputAddress.."/"..ActiveButtons[i]
end
print(InputAddress)
--ATM CARD

start,ends = string.find(string.reverse(InputAddress),string.reverse(HomeSymbol))
start = checkNil(start,0)
ends  = checkNil(ends, 0)
print(start)
if start == 1 then
for i=1, #Address do
if InputAddress == Address[i]  then
print("success on "..i)--activate portal
print(checkNil(Destinations[i],"~0 ~0 ~0"))
CommandBlock.setCommand("/tp @p "..checkNil(Destinations[i],"~0 ~0 ~0"))





sleep(30)
end--codes
end--for codes
end--start/ends
end
ActiveButtons={}
else
--layer 1
if -2+R*6==monX and monY==2+N then insertTable(J,ActiveButtons) end
if -3+R*6==monX and monY==2+N then insertTable(J,ActiveButtons) end
if -4+R*6==monX and monY==2+N then insertTable(J,ActiveButtons) end
--layer 2
if -2+R*6==monX and monY==3+N then insertTable(J,ActiveButtons) end
if -3+R*6==monX and monY==3+N then insertTable(J,ActiveButtons) end
if -4+R*6==monX and monY==3+N then insertTable(J,ActiveButtons) end
end
R=R+1
if R == 6 then
R = 1 
N = N+4 end
end--CheckSymbols
end--if monNumb

write("cycle :")
sleep(.2)
else
print("you have something wrong and this prog won't run right!")
type,monNumb,monX,monY,var5 = os.pullEventRaw()
end
end

endFile
