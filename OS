startFile

--in BIOS/OS
--wallpaper in BIOS/Wallpaper
if not term.isColor() then error("you must run this OS on a adv computer") end
users    ={"guest","admin"}
passwords={"pass","pass"}
access   ={0,4}

serverID = 0
clearanceLevel = 0
--network
os.loadAPI("bios/API")
wallpaper = paintutils.loadImage("BIOS/image/wallpaper")
LoginScreen = paintutils.loadImage("BIOS/image/Login")
--======================================================================================================================
wallpaper = function()
term.setBackgroundColor(colors.black)
term.clear()
paintutils.drawImage(wallpaper,1,1)
end
--======================================================================================================================
desktop = function()
wallpaper()
paintutils.drawLine(1,1,51,1,colors.gray)
term.setCursorPos(7,1)
term.setBackgroundColor(colors.gray)
print("Server ID "..serverID)
end
--======================================================================================================================
login = function()--start login
local fail = false
while not fail do
paintutils.drawImage(LoginScreen,1,1)
term.setCursorPos(24,5)  print("login:")
term.setCursorPos(17,8)  print("user:")
term.setCursorPos(17,10) print("password:")
term.setCursorPos(22,8)  user = read()
term.setCursorPos(26,10) password = read("*")
for i = 1, # user do
if user == users[i] and password == passwords[i] then
term.setCursorPos(22,11)  print("Welcome "..users[i])  sleep(3)
clearanceLevel = access[i]
fail = true
end--if
end--for
if not fail then
term.setBackgroundColor(colors.red)
term.setCursorPos(22,11)
print("Login Failed")
sleep(5)
end--fail
end--while
end--login
--=====================================================================================================================
Input = function(x,y,header)
BackSpace = ""
Enter     = ""
Left      = ""
Right     = ""
select = 0
InputText = ""
Menu = {"[OK]","[CANCEL]"}
Screen={  "|=================================|",
          "|                                 |",
          "|                                 |",
          "|                                 |",
          "|                                 |",
          "|  OK                      CANCEL |",
          "|=================================|"}

while true do
term.setBackgroundColor(color.black)
for i=1, #Screen do
term.setCursorPos(x,y+i-1)
print(Screen[i])
end
term.setCursorPos(x+1,y+1)
print(header)
term.setCursorPos(x+1,y+3)
write(InputText)
if select == 0 then
term.setCursorPos(x+3,y+5)
write(Menu[1])
else
term.setCursorPos(x+27,y+5)
write(Menu[2])end

local event, Button,mouseY,mouseX = os.pullEvent()
InputText = InputText..keys.getName(Button)
if BackSpace == Button then
InputText = string.reverse(InputText)
remove = string.gmatch(InputText,".")
string.gsub(InputText,remove,1)
InputText = string.reverse(InputText)
elseif Left == Button and select>0 then
select = select+1
elseif Right == Button and select<1 then
select = select-1
elseif Enter == Button and select<1 then
return true,InputText
elseif Enter == Button and select>1 then
return false,nil
end--elseif Codes[i] == Button
end--while
end--input funct
--======================================================================================================================
fileBrowser = function()
Default = "BIOS/Files"
path = fs.list(Default)
list = {}

for i=1, #list do
setCursorPos(1,1+i)
if i/2 then term.

print(list[i])
end--for #list

end

local event, button,mouseY,mouseX = os.pullEvent()
mouseX = API.nilCheck(mouseX)
mouseY = API.nilCheck(mouseY)
button = API.nilCheck(button)





term.setBackgroundColor(colors.blue)
term.clear()
term.setCursorPos(20,8)
textutils.slowWrite("version", 100)
for i = 0, 25 do
term.setCursorPos(11+i,9)
textutils.slowWrite("-", 100) end
term.setCursorPos(21,10)
textutils.slowWrite("OS-R", 100)
sleep(3)
login()




endFile
