--diskSide() returns the side diskdrive is on
--keycard(pass,boolean) pass = what code it is looking on, boolean is wether it runs forever
--newCard(pass) pass = what code is written in disk/code file
--printTime(x,y) takes x,y cords of were to print the time
--isOn(x,y,endY,endX,mouseX,mouseY) x,y,endX,endY are the start and stop of the size of 
--button feed mouse poses in mouseX and mouseY and will return true if it is

diskSide = function()
if disk.isPresent("right") then return "right" end
if disk.isPresent("left") then return "left" end
if disk.isPresent("front") then return "front" end
if disk.isPresent("bottom") then return "bottom" end
if disk.isPresent("top") then return "top" end
end
Side = diskSide()
pass = " "
file = " "

keyCard = function(passcode,eternal)
print("starting keycard check")
while true do
event, side = os.pullEvent()
if event == "disk" and fs.exists("disk/code") and disk.getLabel(Side,"Key Card") then
local code = fs.open("/disk/code","r")
content = textutils.serialize(code.readAll())
code.close()
text = string.match(content, passcode)

if passcode == text then
print("security access granted")
redstone.setOutput("back", true)
sleep(3)
redstone.setOutput("back", false)
disk.eject(Side)
if not eternal then break end
end

end--if
end--while
end--function

newCard = function(pass)
if fs.exists("disk/code") then
print("card already in use")
else
local file = fs.open("/disk/code", "w")
file.write(pass)
file.close()
print( "done ")
end--if
end--func

printTime = function(x,y)
local time = os.time()
time = textutils.formatTime(time, false)
term.setCursorPos(x,y)
term.clear()
print(time)
end

isOn = function(x,y,endX,endY,mouseX,mouseY)
if x-1 < mouseX and endX+1 < mouseX
and y < mouseY and endY+1 < mouseY then
return true
else
return false
end

term.clear()
isOn = function(x,y,endX,endY,mouseX,mouseY)
if mouseX > x-1 and mouseX < endX+1 and
   mouseY > y-1 and mouseY < endY+1 then
return true,id
else
return false
end
end
